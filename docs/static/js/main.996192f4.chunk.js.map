{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","console","log","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,cAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,uBAAMC,SAVY,SAACC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAIlB,UACI,8CACA,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAnBmB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,c,8BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACkCC,UAAUH,GAD5C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAe,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAEpC,OADAc,QAAQC,IAAIN,EAAIC,EAAMV,GAElB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,8BAAKA,EAAL,WCHCS,EAAW,SAAC,GAAiB,IAAfrB,EAAc,EAAdA,SAAc,ECCb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAK,GACLe,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAhBEC,qBAAW,WACT1B,EAAQC,GACP0B,MAAK,SAAAC,GAKEH,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,SAKrB,CAACtB,IAEGuB,EDtBuBK,CAAa5B,GAA/Ba,EAFyB,EAE9BN,KAAYe,EAFkB,EAElBA,QAEnB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAElDsB,GAAW,mBAAGJ,UAAU,mCAAb,sBACZ,qBAAKA,UAAU,YAAf,SAGYL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,2BAEIA,GAFJ,IAGAA,IAAKA,IAFAA,EAAIC,aEdpBkB,EAAe,WAAO,IAAD,EAGM3C,mBAAS,CAAC,cAHhB,mBAGvB4C,EAHuB,KAGX7C,EAHW,KAS9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAWA,GADLA,YClB9B+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.996192f4.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('Hola Mundo');\r\n    const handledInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handledSubmit = (e)=> {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handledSubmit}>\r\n            <h2>Add Category</h2>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue} \r\n            onChange={handledInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: propTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=RAPpkSdm3PuT5l2qCRbZwofIjkHX6JSs`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react';\r\n\r\nexport const GiftGridItem = ({id, title,url}) => {\r\n    console.log(id, title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{ title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GiftGridItem } from './GiftGridItem';\r\nexport const GiftGrid = ( {category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">Cargando</p> }\r\n        <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map(img => (\r\n                        <GiftGridItem \r\n                        key={img.id}\r\n                        {...img }\r\n                        img={img} />\r\n                        \r\n                    )\r\n                    )\r\n                }\r\n             \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useState,useEffect } from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n      useEffect( () => {\r\n        getGifs(category)\r\n        .then(imgs => {\r\n\r\n            \r\n\r\n\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n\r\n            \r\n        })\r\n    }, [category]);\r\n\r\n    return state;\r\n    \r\n}\r\n","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['one punch']);\r\n\r\n    // const handledAdd = () => {\r\n    //     setCategories( [...categories, 'HunterXhunter'] );\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n        \r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                        <GiftGrid\r\n                        key={ category } \r\n                        category={ category } />\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from \"./GifExpertApp\";\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}